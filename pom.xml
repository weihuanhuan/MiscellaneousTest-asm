<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.ow2.asm</groupId>
    <artifactId>asm-parent</artifactId>
    <version>6.1.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>asm</module>
        <module>asm-analysis</module>
        <module>asm-commons</module>
        <module>asm-tree</module>
        <module>asm-util</module>
        <module>asm-xml</module>
        <module>asm-all</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-project-lib</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
               bugfix
               maven-site-plugin:3.3:site failed: A required class was missing while executing
               org.apache.maven.plugins:maven-site-plugin:3.3:site: org/apache/maven/doxia/siterenderer/DocumentContent

               虽然该工程被 MiscellaneousTest 的 modules 中所有引用，导致其会随着 MiscellaneousTest 的编译而进行编译。
               但该工程的 parent 并不是 MiscellaneousTest ，所以其无法继承到我们在 MiscellaneousTest 中的版本配置，故需要单独进行设置
           -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>

            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>4.9.10</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                    </generateGitPropertiesFilename>
                    <includeOnlyProperties>
                        <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
                        <includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
                    </includeOnlyProperties>
                    <commitIdGenerationMode>full</commitIdGenerationMode>
                </configuration>
            </plugin>

        </plugins>


    </build>

    <profiles>

        <profile>
            <id>one.profile</id>
            <activation>
                <property>
                    <name>prop1</name>
                    <value>one</value>
                </property>
            </activation>
            <properties>
                <my.property>value from one.profile</my.property>
            </properties>
        </profile>

        <profile>
            <id>two.profile</id>
            <activation>
                <!-- 当存在多个条件时，他们之间是与的关系，需要同时满足才能激活该 profile -->
                <property>
                    <name>prop2</name>
                    <value>two</value>
                </property>
                <!-- 在处理 activation 激活条件时, 无法解析 ${project.basedir} 变量，需要使用 ${basedir} 替代 -->
                <!-- 当 ${project.basedir} 不能解析时，其值为 empty string ，这里的条件就找文件 /.git,一般情况永远不会成功的 -->
                <file>
                    <exists>${project.basedir}/.git</exists>
                </file>
            </activation>
            <properties>
                <my.property>value from two.profile</my.property>
            </properties>
        </profile>

        <profile>
            <id>three.profile</id>
            <activation>
                <property>
                    <name>prop3</name>
                    <value>three</value>
                </property>
                <!-- 在处理 activation 激活条件时, file 中的 ${basedir} 是可以解析的，其计算时会独立于每个具体的子工程进行重新解析的 -->
                <!-- 比如在 MiscellaneousTest-asm 中 ${basedir} 解析时，其值为 MiscellaneousTest-asm ，这里的条件就找文件 MiscellaneousTest-asm/.git, 该文件存在 -->
                <!-- 比如在 asm-all 中 ${basedir} 解析时，其值为 MiscellaneousTest-asm/asm-all ，这里的条件就找文件 MiscellaneousTest-asm/asm-all/.git,该文件不存在 -->
                <file>
                    <exists>${basedir}/.git</exists>
                </file>
            </activation>
            <properties>
                <my.property>value from three.profile</my.property>
            </properties>
        </profile>

    </profiles>

</project>
